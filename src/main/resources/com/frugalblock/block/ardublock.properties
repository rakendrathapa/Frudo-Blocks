# BlockDrawer name
bc.angle=angle
bc.base=base
bc.condition=condition
bc.else=else
bc.exponent=exponent
bc.from=from
bc.level=level
bc.max=max
bc.microseconds=microseconds
bc.milliseconds=milliseconds
# BlockConnector label
bc.pin_number=pin#
bc.status=status
bc.test=test
bc.then=then
bc.to=to
bc.value=value
bc.variable=variable
bc.frequency=frequency
bc.do=do
bc.device_address=device address
bc.register_address=register address
bd.control=Control
bd.number=Number/Constants
bd.operators=Operators
bd.pins=Pins
bd.utilities=Utilities

## Frudino Associated name
bd.Frudino=Frudino
bg.Sensor_0=Sensor_0
bg.Sensor_1=Sensor_1
bg.Sensor_2=Sensor_2
bg.Sensor_3=Sensor_3
bg.Sensor_4=Sensor_4
bg.Sensor_5=Sensor_5
bg.Motor1_dir_0=Motor1_dir_0
bg.Motor1_dir_1=Motor1_dir_1
bg.Motor2_dir_0=Motor2_dir_0
bg.Motor2_dir_1=Motor2_dir_1
bg.Motor3_dir_0=Motor3_dir_0
bg.Motor3_dir_1=Motor3_dir_1
bg.Motor4_dir_0=Motor4_dir_0
bg.Motor4_dir_1=Motor4_dir_1
bg.FrugalBlock_LED=LED
bg.FrugalBlock_Buzzer=Buzzer
bg.TestBlock=Test Block

bg.abs=abs
bg.addition=+
bg.and=and
bg.cos=cos
bg.delay=delay
bg.delay_microseconds=delayMicroseconds

bg.digital-high=HIGH
bg.digital-low=LOW
bg.digital-off=OFF
bg.digital-on=ON
bg.division=\u00f7
bg.equal==
bg.false=FALSE
bg.glue_sb=glue
bg.glue_sn=glue
bg.greater=>
bg.greater_equal=>=
bg.if=if
bg.ifelse=if/else
bg.less=<
bg.less_equal=<=
bg.loop=loop
bg.subroutine=subroutine
bg.subroutine-ref=subroutine
bg.map=map
bg.map_common=map [0, 1024] to [0, 255]
bg.max=max
bg.message=message
bg.millis=millis
bg.min=min
bg.modulo=%
bg.multiplication=x
bg.not=not
bg.not_equal=!=
bg.number=1
bg.or=or
bg.pin-read-analog=analog pin
bg.pin-read-digital=digital pin
bg.pin-write-analog=set analog pin
bg.pin-write-digital=set digital pin
bg.pow=power
bg.random=random
bg.repeat_times=repeat
bg.serial_println=Serial println
bg.servo=Servo
bg.setter_variable_digital=set digital var
bg.setter_variable_number=set number variable
bg.sin=sin
bg.sqrt=sqrt
bg.subtraction=-
bg.tan=tan
bg.true=TRUE
bg.ultrasonic=ultrasonic
bg.variable_digital=digital var name
bg.variable_number=number var name
bg.while=while
bg.wire_isread=I2C read ok?
bg.wire_read=I2C Read
bg.wire_write=I2C Write
bg.tone=tone
bg.tone_time=tone
bg.no_tone=noTone

ardublock.file.suffix=ArduBlock Program File(*.abp)
ardublock.file.suffix=ArduBlock Program File(*.abp)

ardublock.ui.save=Save
ardublock.ui.load=load
ardublock.ui.upload=Upload
ardublock.ui.clone=Clone
ardublock.ui.add_comment=Add Comment
ardublock.ui.delete_comment=Delete Comment
ardublock.ui.organize_blocks=Organize all blocks
ardublock.ui.create_refer=create reference

ardublock.translator.exception.subroutineNameDuplicated=tow or more subroutines have the same name!
ardublock.translator.exception.noLoopFound=No loop found!
ardublock.translator.exception.multipleLoopFound=multiple loop block found!
ardublock.translator.exception.socketNull=socket null
ardublock.translator.exception.subroutineNotDeclared=subroutine not declared

message.title.error=Error
message.title.question=Question
message.content.open_unsaved=ArduBlock program changed, do you want to save?
message.content.overwrite=Do you want overwrite existed file?
message.file_not_found=File Not Found or Permission Denied
